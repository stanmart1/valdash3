class t{async getMEVData(e){if(!e)throw new Error("Validator key required for MEV data");try{const r=await fetch(`https://mainnet.block-engine.jito.wtf/api/v1/validators/${e}/mev`);if(!r.ok)throw new Error("Failed to fetch MEV data");return await r.json()}catch(r){throw console.error("Jito API error:",r),new Error("MEV data unavailable - configure Jito Labs API key")}}async getSearcherActivity(e){if(!e)throw new Error("Validator key required for searcher data");try{const r=await fetch(`https://mainnet.block-engine.jito.wtf/api/v1/validators/${e}/searchers`);if(!r.ok)throw new Error("Failed to fetch searcher data");return await r.json()}catch(r){throw console.error("Jito searcher API error:",r),new Error("Searcher data unavailable - configure Jito Labs API key")}}async getBundleStats(e){if(!e)throw new Error("Validator key required for bundle stats");try{const r=await fetch(`https://mainnet.block-engine.jito.wtf/api/v1/validators/${e}/bundles`);if(!r.ok)throw new Error("Failed to fetch bundle statistics");return await r.json()}catch(r){throw console.error("Jito bundle stats error:",r),new Error("Bundle stats unavailable - configure Jito Labs API key")}}}const a=new t;export{a as jitoClient};
